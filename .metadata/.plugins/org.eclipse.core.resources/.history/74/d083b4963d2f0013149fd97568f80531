/**
 * 
 */
package strings;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import staticPack.TextFile;

/**
 * @author orecto
 * 
 */
/*
 * Modify JGrep.java to accept flags as arguments (e.g.,
 * Pattern.CASE_INSENSITIVE, Pattern.MULTILINE)
 */
public class Exercise15 {
	public static void main(String[] args) throws Exception {
		if (args.length < 3) {
			System.out.println("Usage: java JGrep file regex flag");
			System.exit(0);
		}
		int flag = 0;
		System.out.println(Pattern.CASE_INSENSITIVE);
		System.out.println(Pattern.CANON_EQ);
		System.out.println(Pattern.COMMENTS);
		System.out.println(Pattern.DOTALL);
		System.out.println(Pattern.LITERAL);
		System.out.println(Pattern.MULTILINE);
		System.out.println(Pattern.UNICODE_CASE);
		System.out.println(Pattern.UNIX_LINES);
//		Flags f = args[2];
//		switch()
//		case anObject.equals("CASE_INSENSITIVE"):
//		if (args[2].equals("Pattern.CASE_INSENSITIVE"))
//			flag = Pattern.CASE_INSENSITIVE;
//		else if (args[2].equals("Pattern.CANON_EQ"))
//			flag = Pattern.CANON_EQ;
//		else if (args[2].equals("Pattern.COMMENTS"))
//			flag = Pattern.COMMENTS;
//		else if (args[2].equals("Pattern.DOTALL"))
//			flag = Pattern.DOTALL;
//		else if (args[2].equals("Pattern.LITERAL"))
//			flag = Pattern.LITERAL;
//		else if (args[2].equals("Pattern.MULTILINE"))
//			flag = Pattern.MULTILINE;
//		else if (args[2].equals("Pattern.UNICODE_CASE"))
//			flag = Pattern.UNICODE_CASE;
//		else if (args[2].equals("Pattern.UNIX_LINES"))
//			flag = Pattern.UNIX_LINES;
		Pattern p = Pattern.compile(args[1], flag);
		// Iterate through the lines of the input file:
		int index = 0;
		Matcher m = p.matcher(""); // creates empty Matcher object
		for (String line : new TextFile(args[0])) {
			m.reset(line);
			while (m.find())
				System.out.println(index++ + ": " + m.group() + ": "
						+ m.start());
		}
	}
}
