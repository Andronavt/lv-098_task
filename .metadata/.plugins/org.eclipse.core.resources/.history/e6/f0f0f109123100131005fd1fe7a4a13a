package test.parser;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import test.IpFactory;
import test.ip.IP;

public class Parser3 extends Parser {
	public Parser3() {
	}

	public Parser3(FileReader r) {
		// super();
		char ch = 0;
		boolean read = true;
		StringBuilder buffer = new StringBuilder(40);
		try {
			while (true) {
				ch = (char) r.read();
				if (ch == -1 || ch == 65535) {
					break;
				}else if(ch == ' '){
					read = true;
				} else if (ch == '\r' && buffer.length() > 0) {
					// System.out.println(buffer);
					// System.out.println();
					IP ip = IpFactory.getIP(buffer.toString());
					this.addToList(ip);
					buffer = new StringBuilder(40);
					read = false;
				} else if (read) {
					buffer.append(ch);
				}
				// try {
				// Thread.sleep(10);
				// } catch (InterruptedException e) {
				// e.printStackTrace();
				// }
			}
			r.close();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				r.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

//	public Parser3(BufferedReader r) {
//		// super();
//		char ch = 0;
//		boolean endOfLine = true;
//		StringBuilder buffer = new StringBuilder(40);
//		try {
//			while (true) {
//				ch = (char) r.read();
//				if (ch == -1 || ch == 65535) {
//					break;
//				} else if (ch == '#') {
//					endOfLine = false;
//				} else if (ch == '\n') {
//					endOfLine = true;
//				} else if (ch == '\r' && buffer.length() > 0) {
//					// System.out.println(buffer);
//					// System.out.println();
//					IP ip = IpFactory.getIP(buffer.toString());
//					this.addToList(ip);
//					buffer = new StringBuilder(40);
//				} else if (endOfLine) {
//					buffer.append(ch);
//				}
//				// try {
//				// Thread.sleep(10);
//				// } catch (InterruptedException e) {
//				// e.printStackTrace();
//				// }
//			}
//			r.close();
//		} catch (IOException e) {
//			e.printStackTrace();
//		} finally {
//			try {
//				r.close();
//			} catch (IOException e) {
//				e.printStackTrace();
//			}
//		}
//	}

	public Parser3(Scanner s) {
		// super();
		Pattern pattern = Pattern
				.compile("(([0-9a-fA-F]+[.:]){3,7})[0-9a-fA-F]+");
		while (s.hasNext()) {
			StringBuilder buffer = new StringBuilder(20);
			Matcher matcher = pattern.matcher(s.nextLine());
			if (matcher.find()) {
				buffer.append(matcher.group());
				addToList(IpFactory.getIP(buffer.toString()));
			}

		}
		s.close();
	}
}
